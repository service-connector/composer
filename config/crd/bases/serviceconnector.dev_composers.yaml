---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: composers.serviceconnector.dev
spec:
  group: serviceconnector.dev
  names:
    kind: Composer
    listKind: ComposerList
    plural: composers
    singular: composer
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Composer is the Schema for the composers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ComposerSpec defines the desired state of Composer
            properties:
              mappings:
                description: Mappings is a collection of Path values where each path
                  represents a path represents JSONPath expression for a field in
                  the resource
                items:
                  description: Mapping represents JSONPath expression for a field
                    in the resource
                  properties:
                    base64:
                      description: Decode Base64
                      type: boolean
                    ignore:
                      description: Ignore the entry from the target
                      type: boolean
                    name:
                      description: target key name
                      type: string
                    path:
                      description: JSONPath expression
                      type: string
                    resouceID:
                      description: Resource ID
                      type: string
                  required:
                  - name
                  - path
                  - resouceID
                  type: object
                type: array
              provider:
                description: Provider is the provider of the service
                type: string
              resources:
                description: Resources is a collection of Resouce objects where each
                  resource represents a Kubernetes resource including custom resources
                items:
                  description: Resource represents a Kubernetes resource with an ID
                  properties:
                    id:
                      description: ID to indentify the resource reference
                      type: string
                    ref:
                      description: Ref points to a Kubernetes resource reference
                      properties:
                        apiVersion:
                          description: API version of the Resource
                          type: string
                        kind:
                          description: Kind of the Resource
                          type: string
                        name:
                          description: Name of the Resource Mutually exclusive with
                            a combination of SourceID and TargetPath
                          type: string
                        path:
                          description: Path is a JSONPath expression to target resource
                            A combination of SourceID and TargetPath is mutually exclusive
                            with Name
                          type: string
                        resourceID:
                          description: Name of the source resource A combination of
                            SourceID and TargetPath is mutually exclusive with Name
                          type: string
                      required:
                      - apiVersion
                      - kind
                      type: object
                  required:
                  - id
                  - ref
                  type: object
                type: array
              serviceAccountName:
                description: ServiceAccountName refer the name of the service account
                  used for all reconciliation
                type: string
              templates:
                description: Templates is a collection of Template values where each
                  path represents a Go template with access to all the path values
                items:
                  description: Template represents a Go template with access to all
                    the path values
                  properties:
                    name:
                      type: string
                    template:
                      type: string
                  required:
                  - name
                  - template
                  type: object
                type: array
              type:
                description: Type is the type of the service
                type: string
            required:
            - mappings
            - resources
            type: object
          status:
            description: ComposerStatus defines the observed state of Composer
            properties:
              binding:
                description: Binding exposes the constructed Secret from the backing
                  services resources and comform to Provisioned Service duck-type
                  of Service Binding Specification
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              conditions:
                description: 'Represents the observations of a Composer''s current
                  state. Composer.status.conditions.type are: "Available", "Progressing",
                  and "Degraded" Composer.status.conditions.status are one of True,
                  False, Unknown. Composer.status.conditions.reason the value should
                  be a CamelCase string and producers of specific condition types
                  may define expected values and meanings for this field, and whether
                  the values are considered a guaranteed API. Composer.status.conditions.Message
                  is a human readable message indicating details about the transition.
                  For further information see: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the 'Generation' of the CompositeService
                  that was last processed by the controller.
                format: int64
                type: integer
            required:
            - binding
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
